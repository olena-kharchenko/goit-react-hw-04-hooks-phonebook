{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Container","children","className","s","container","Section","title","section","MyForm","contacts","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","namesInPhonebook","reduce","acc","contact","numbersInPhonebook","includes","alert","contactMatching","form","type","value","placeholder","onChange","currentTarget","input","country","buttonWrapper","button","Filter","filter","ContactList","onDeleteContact","list","map","id","item","heart","text","span","onClick","times","initialContacts","App","setContacts","setFilter","isFirstRender","useRef","useEffect","current","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","getVisibleContacts","contactWithId","shortid","generate","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2989674a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2JahR\",\"title\":\"Section_title__3zU1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__11UWT\",\"input\":\"Filter_input__kDO53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__oTFxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__9Ro6Z\",\"item\":\"ContactList_item__2lY_s\",\"text\":\"ContactList_text__3da0w\",\"span\":\"ContactList_span__3zRMt\",\"button\":\"ContactList_button__3CDRj\",\"heart\":\"ContactList_heart__3paS1\",\"times\":\"ContactList_times__2TV7i\"};","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useState } from 'react';\n\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\n\nfunction MyForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactMatching = () => {\n    const namesInPhonebook = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n\n    const numbersInPhonebook = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (\n      namesInPhonebook.includes(name) ||\n      numbersInPhonebook.includes(number)\n    ) {\n      alert(`${name}${number} is already in contacts`);\n      return true;\n    }\n\n    if (name === '' || number === '') {\n      alert('Please enter all data');\n      return true;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setName('');\n    setNumber('');\n\n    if (contactMatching()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Elon Mask\"\n          onChange={e => setName(e.currentTarget.value)}\n          className={s.input}\n        />\n      </label>\n      <label>\n        Number\n        <PhoneInput\n          country={'us'}\n          value={number}\n          placeholder=\"10664888778\"\n          onChange={setNumber}\n        />\n      </label>\n      <div className={s.buttonWrapper}>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nMyForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default MyForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Enter name to search\"\n        className={s.input}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <span className={s.heart}>&hearts;</span>\n          <p className={s.text}>\n            {name}: {number}\n          </p>\n          <span className={s.span}></span>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={s.button}\n          >\n            <span className={s.times}>&times;</span>\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect, useRef } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport MyForm from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Elon Mask', number: '10664888778' },\n  { id: 'id-2', name: 'Lena Kharchenko', number: '380664969795' },\n  { id: 'id-3', name: 'Bill Gates', number: '10662475771' },\n  { id: 'id-4', name: 'Mark Zuckerberg ', number: '10625884318' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n      if (parsedContacts) {\n        setContacts(parsedContacts);\n      }\n\n      isFirstRender.current = false;\n      return;\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contactWithId = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts([contactWithId, ...contacts]);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <Section title=\"Cosmic Phonebook\">\n        <MyForm onSubmit={addContact} contacts={contacts} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter\n          value={filter}\n          onChange={e => setFilter(e.currentTarget.value)}\n        />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const elem1 = <span>Привет</span>;\n// const elem2 = <span>мир</span>;\n\n// const element = (\n//   <div>\n//     {elem1}\n//     {elem2}\n//   </div>\n// );\n// console.log(element);\n\n// ReactDOM.render(element, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3Y3yC\",\"input\":\"Form_input__3KfhP\",\"button\":\"Form_button__2_8U5\",\"buttonWrapper\":\"Form_buttonWrapper__1VAiH\"};"],"sourceRoot":""}